name: panic Automation

on: [push]

jobs:

  django:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - name: Create Docker Mounted Content
      run: |
        echo | ssh-keygen
        touch ${HOME}/.gitconfig
        touch ${HOME}/.gitconfig_global
    - name: Ensure File System is Writable by the Container
      run: |
        sudo chmod -R 777 .
    - name: Build Container
      run: |
        docker-compose build
        docker-compose up -d
    - name: Run Linter
      run: |
        docker-compose exec -T panic bash -l -c 'scripts/commander.sh lint-validate'
    - name: Run Sec Test
      run: |
        docker-compose exec -T panic bash -l -c 'scripts/commander.sh sectest'
    - name: Run Safety from the Host Machine
      run: |
        docker-compose exec -T panic bash -l -c 'pip freeze > safety.txt'
        sudo pip3 install wheel setuptools
        sudo pip3 install safety
        safety check -r safety.txt
    - name: Run Unit Tests
      run: |
        docker-compose exec -T panic bash -l -c 'scripts/commander.sh test coverage'

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - name: Install Node Modules
        run: |
          cd panic/frontend/
          npm install
      - name: Test Code Can Build
        run: |
          cd panic/frontend/
          npm run dev
      - name: Run Linter
        run: |
          cd panic/frontend/
          npm run lint
      - name: Sec Test
        run: |
          cd panic/frontend/
          npm audit
